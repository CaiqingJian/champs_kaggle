{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# GUILLAUME'S MODELS\n",
    "\n",
    "## data requirement\n",
    "\n",
    "The competition data should be in a directory data/\n",
    "\n",
    "## dataset creation\n",
    "\n",
    "Run all cells from the notebook 117.\n",
    "\n",
    "Needs about 300GB of Ram, I used aws m5.metal instances. Once the dataset is written on the disk, such high quantity of ram is not needed anymore.\n",
    "\n",
    "The code could be refactored to consume less ram\n",
    "\n",
    "## models\n",
    "\n",
    "Run individually all cells from notebooks 09Z*.\n",
    "\n",
    "The models were trained on a V100 (aws p3.large aws instance).\n",
    "\n",
    "They take between three days to two weeks to run with the ideal scheduling described in the notebook.\n",
    "\n",
    "The ideal scheduling we found was 150 epoch with fixed learning rate then divide the learning rate by 2 each 3 epochs.\n",
    "\n",
    "In reality, due to cost and cloud constraints, we only trained some of the slower models implemented in the notebooks a fraction of the ideal scheduling. (more specifically a fraction of the 150 epoch with fixed learning rate)\n",
    "\n",
    "## predictions\n",
    "\n",
    "to predicts with the models, run all cells of the notebook 401.\n",
    "\n",
    "this notebook will predict with the final checkpoint of each model and two checkpoints a bit before each model is fully trained.\n",
    "\n",
    "Those intermediate checkpoints predictions, even if they are not as performing as the fully trained model, bring a bit of additionnal performance for 'free'\n",
    "\n",
    "In reality, due to cloud constraints and manual checkpointing, the checkpoints we used in the competition are not as 'clean' as the one suggested in the notebook, but are a more chaotic. We think that the clean checkpoints given in the notebool will provide a comparable performance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
